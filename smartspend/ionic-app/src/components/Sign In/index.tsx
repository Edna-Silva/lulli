import {
  IonButton,
  IonCol,
  IonHeader,
  IonIcon,
  IonInput,
  IonRow,
  IonText,
  IonTitle,
  IonToolbar
} from "@ionic/react";
import React, { useState } from "react";

import { chevronBackOutline } from "ionicons/icons";
import "./styles.scss";

import { useDispatch } from "react-redux";
import { useHistory } from "react-router-dom";
import storage from "../../redux/store";
import { AuthModel } from "../../services/auth/auth.model";
import { useGetBankAccountsQuery, useGetBudgetsQuery, useGetCategoryQuery, useGetPlannedPaymentsQuery, useGetStatisticsQuery, useGetTransactionsQuery, useGetUserQuery, useGetWalletsQuery, useSigninMutation } from "../../services/backend";
import { fetchAndStoreAPIData } from "../../utils/util";


const SignIn: React.FC = () => {
  const dispatch = useDispatch();
  const history = useHistory()
  // const {access} = localStorage.getItem('userDetails')

  const [email, setEmail] = useState<string>('')
  const [invalidCredentials, setInvalidCredentials] = useState(false)
  const [password, setPassword] = useState<string>('')
  const [signin, { isLoading }] = useSigninMutation()



  const handleSubmit = async (e: any) => {
 

    const data: AuthModel = {
      email: email,
      password: password
    }
    
    try {
      const response: any = await signin(data)
      
      if (response.data) {
        
        
        await storage.set('tokens', response.data)
        await fetchAndStoreAPIData(dispatch)
        history.push('/onboarding-add-categories')
      }else{
        setInvalidCredentials(!invalidCredentials)
      }
    } catch (error: any) {
      if (error.data && error.data.message) { // Check if the error has a structured message
        console.log(error);

      } else {
        console.error("An error occurred during login. Please try again."); // Generic error message
      }
      console.error("Login error:", error);
    }
  }

  const handleBackNavigation = () => {
    history.push('/welcome-screen')
  }
  const handleForwardNavigation = () => {
    history.push('/onboarding-add-categories')
  }
  return (
    <>
      <IonHeader>
        <IonToolbar>
          <div className="tool-bar-title"><IonIcon icon={chevronBackOutline} aria-hidden={true} onClick={handleBackNavigation} /><IonTitle>Sign In</IonTitle></div>
        </IonToolbar>
      </IonHeader>
      <div className="sign-in-page">
        <IonRow className="sign-in" >
          <IonCol className="top-logo" >
            <svg width="201" height="151" viewBox="0 0 201 151" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M144.387 71.0353V101C152.145 94.6106 155.207 89.5594 157.506 77.8653C157.577 77.5032 157.61 77.1277 157.587 76.7594C157.391 73.5045 156.388 71.6821 153.631 68.4322C152.733 67.3741 151.414 66.743 150.026 66.7559C148.517 66.7699 147.383 66.9171 146.252 67.475C144.957 68.1139 144.387 69.5914 144.387 71.0353Z" stroke="#F8F8FF" />
              <path d="M127.152 72.0341C118.657 75.5669 115.6 79.5302 114.327 89.1594C123.409 85.1422 126.837 81.4852 128.461 73.0944C128.607 72.3406 127.861 71.7392 127.152 72.0341Z" stroke="#F8F8FF" />
              <path d="M141.899 69.7236C140.465 85.5386 136.634 90.6558 126.952 95.7387C129.943 79.2768 130.855 68.0134 141.03 68.6717C141.563 68.7062 141.947 69.1914 141.899 69.7236Z" stroke="#F8F8FF" />
              <path d="M134.576 29.8937L140.78 39.8161L77.6858 30.1368C76.8688 30.0114 76.0834 29.7737 75.3695 29.357C67.728 24.8968 47.7318 8.13097 43.3877 1L130.048 26.4591C131.926 27.0111 133.538 28.2332 134.576 29.8937Z" stroke="#F8F8FF" />
              <path d="M141.929 45.8166L148.264 54.4244L95.8942 54.1929C94.9431 54.1887 94.0036 54.0217 93.1511 53.6189C86.1402 50.3065 68.9661 38.8519 64.4307 31.9207L136.871 42.7724C138.902 43.0766 140.715 44.1679 141.929 45.8166Z" stroke="#F8F8FF" />
              <path d="M148.552 60.1933L151.422 64.0972L112.053 72.494C111.139 72.6891 110.212 72.7248 109.321 72.5048C103.128 70.9762 87.1561 64.7809 82.4639 60.2117L142.213 57.1811C144.712 57.0544 147.067 58.1732 148.552 60.1933Z" stroke="#F8F8FF" />
              <path d="M9.9 142.36C7.932 142.36 6.252 142 4.86 141.28C3.468 140.56 2.232 139.516 1.152 138.148L3.456 135.844C4.248 136.948 5.16 137.788 6.192 138.364C7.224 138.916 8.496 139.192 10.008 139.192C11.496 139.192 12.684 138.868 13.572 138.22C14.484 137.572 14.94 136.684 14.94 135.556C14.94 134.62 14.724 133.864 14.292 133.288C13.86 132.712 13.272 132.244 12.528 131.884C11.808 131.5 11.016 131.164 10.152 130.876C9.288 130.564 8.424 130.24 7.56 129.904C6.696 129.544 5.904 129.112 5.184 128.608C4.464 128.08 3.876 127.396 3.42 126.556C2.988 125.716 2.772 124.66 2.772 123.388C2.772 121.972 3.108 120.772 3.78 119.788C4.476 118.78 5.412 118.012 6.588 117.484C7.788 116.932 9.132 116.656 10.62 116.656C12.252 116.656 13.716 116.98 15.012 117.628C16.308 118.252 17.364 119.08 18.18 120.112L15.876 122.416C15.132 121.552 14.328 120.904 13.464 120.472C12.624 120.04 11.652 119.824 10.548 119.824C9.204 119.824 8.136 120.124 7.344 120.724C6.552 121.3 6.156 122.116 6.156 123.172C6.156 124.012 6.372 124.696 6.804 125.224C7.26 125.728 7.848 126.16 8.568 126.52C9.288 126.88 10.08 127.216 10.944 127.528C11.832 127.816 12.708 128.14 13.572 128.5C14.436 128.86 15.228 129.316 15.948 129.868C16.668 130.42 17.244 131.14 17.676 132.028C18.132 132.892 18.36 133.984 18.36 135.304C18.36 137.512 17.592 139.24 16.056 140.488C14.544 141.736 12.492 142.36 9.9 142.36ZM22.3447 142V124.9H25.5848V142H22.3447ZM33.9008 142V131.668C33.9008 130.396 33.5048 129.4 32.7128 128.68C31.9448 127.936 30.9728 127.564 29.7968 127.564C29.0048 127.564 28.2968 127.732 27.6728 128.068C27.0488 128.404 26.5448 128.872 26.1608 129.472C25.7768 130.072 25.5848 130.792 25.5848 131.632L24.2528 130.984C24.2528 129.688 24.5288 128.56 25.0808 127.6C25.6568 126.64 26.4368 125.896 27.4208 125.368C28.4048 124.816 29.5088 124.54 30.7328 124.54C31.9328 124.54 33.0128 124.804 33.9728 125.332C34.9568 125.86 35.7248 126.604 36.2768 127.564C36.8528 128.524 37.1408 129.664 37.1408 130.984V142H33.9008ZM45.4568 142V131.668C45.4568 130.396 45.0608 129.4 44.2688 128.68C43.5008 127.936 42.5408 127.564 41.3888 127.564C40.5968 127.564 39.8768 127.732 39.2288 128.068C38.6048 128.404 38.1008 128.872 37.7168 129.472C37.3328 130.072 37.1408 130.792 37.1408 131.632L35.3048 130.984C35.3768 129.664 35.7248 128.536 36.3488 127.6C36.9968 126.64 37.8248 125.896 38.8328 125.368C39.8408 124.816 40.9448 124.54 42.1448 124.54C43.3928 124.54 44.5088 124.804 45.4928 125.332C46.4768 125.86 47.2568 126.604 47.8328 127.564C48.4328 128.524 48.7328 129.676 48.7328 131.02V142H45.4568ZM60.4136 142.36C58.8536 142.36 57.4376 141.976 56.1656 141.208C54.8936 140.416 53.8856 139.348 53.1416 138.004C52.4216 136.66 52.0616 135.148 52.0616 133.468C52.0616 131.788 52.4216 130.276 53.1416 128.932C53.8856 127.588 54.8816 126.52 56.1296 125.728C57.4016 124.936 58.8296 124.54 60.4136 124.54C61.7096 124.54 62.8616 124.816 63.8696 125.368C64.9016 125.896 65.7296 126.64 66.3536 127.6C66.9776 128.536 67.3256 129.628 67.3976 130.876V136.024C67.3256 137.248 66.9776 138.34 66.3536 139.3C65.7536 140.26 64.9376 141.016 63.9056 141.568C62.8976 142.096 61.7336 142.36 60.4136 142.36ZM60.9536 139.3C62.5616 139.3 63.8576 138.76 64.8416 137.68C65.8256 136.576 66.3176 135.172 66.3176 133.468C66.3176 132.292 66.0896 131.272 65.6336 130.408C65.2016 129.52 64.5776 128.836 63.7616 128.356C62.9456 127.852 61.9976 127.6 60.9176 127.6C59.8376 127.6 58.8776 127.852 58.0376 128.356C57.2216 128.86 56.5736 129.556 56.0936 130.444C55.6376 131.308 55.4096 132.304 55.4096 133.432C55.4096 134.584 55.6376 135.604 56.0936 136.492C56.5736 137.356 57.2336 138.04 58.0736 138.544C58.9136 139.048 59.8736 139.3 60.9536 139.3ZM66.1016 142V137.392L66.7136 133.216L66.1016 129.076V124.9H69.3776V142H66.1016ZM74.0947 142V124.9H77.3348V142H74.0947ZM77.3348 132.244L76.1108 131.704C76.1108 129.52 76.6148 127.78 77.6228 126.484C78.6308 125.188 80.0828 124.54 81.9788 124.54C82.8428 124.54 83.6228 124.696 84.3188 125.008C85.0148 125.296 85.6628 125.788 86.2628 126.484L84.1388 128.68C83.7788 128.296 83.3828 128.02 82.9508 127.852C82.5188 127.684 82.0148 127.6 81.4388 127.6C80.2388 127.6 79.2548 127.984 78.4868 128.752C77.7188 129.52 77.3348 130.684 77.3348 132.244ZM91.1017 142V117.736H94.3417V142H91.1017ZM86.8897 127.852V124.9H98.5537V127.852H86.8897ZM109.252 142.36C107.284 142.36 105.604 142 104.212 141.28C102.82 140.56 101.584 139.516 100.504 138.148L102.808 135.844C103.6 136.948 104.512 137.788 105.544 138.364C106.576 138.916 107.848 139.192 109.36 139.192C110.848 139.192 112.036 138.868 112.924 138.22C113.836 137.572 114.292 136.684 114.292 135.556C114.292 134.62 114.076 133.864 113.644 133.288C113.212 132.712 112.624 132.244 111.88 131.884C111.16 131.5 110.368 131.164 109.504 130.876C108.64 130.564 107.776 130.24 106.912 129.904C106.048 129.544 105.256 129.112 104.536 128.608C103.816 128.08 103.228 127.396 102.772 126.556C102.34 125.716 102.124 124.66 102.124 123.388C102.124 121.972 102.46 120.772 103.132 119.788C103.828 118.78 104.764 118.012 105.94 117.484C107.14 116.932 108.484 116.656 109.972 116.656C111.604 116.656 113.068 116.98 114.364 117.628C115.66 118.252 116.716 119.08 117.532 120.112L115.228 122.416C114.484 121.552 113.68 120.904 112.816 120.472C111.976 120.04 111.004 119.824 109.9 119.824C108.556 119.824 107.488 120.124 106.696 120.724C105.904 121.3 105.508 122.116 105.508 123.172C105.508 124.012 105.724 124.696 106.156 125.224C106.612 125.728 107.2 126.16 107.92 126.52C108.64 126.88 109.432 127.216 110.296 127.528C111.184 127.816 112.06 128.14 112.924 128.5C113.788 128.86 114.58 129.316 115.3 129.868C116.02 130.42 116.596 131.14 117.028 132.028C117.484 132.892 117.712 133.984 117.712 135.304C117.712 137.512 116.944 139.24 115.408 140.488C113.896 141.736 111.844 142.36 109.252 142.36ZM130.696 142.36C129.4 142.36 128.224 142.096 127.168 141.568C126.136 141.016 125.308 140.26 124.684 139.3C124.06 138.34 123.712 137.248 123.64 136.024V130.876C123.712 129.628 124.06 128.536 124.684 127.6C125.332 126.64 126.172 125.896 127.204 125.368C128.26 124.816 129.424 124.54 130.696 124.54C132.256 124.54 133.66 124.936 134.908 125.728C136.18 126.52 137.176 127.588 137.896 128.932C138.616 130.276 138.976 131.788 138.976 133.468C138.976 135.148 138.616 136.66 137.896 138.004C137.176 139.348 136.18 140.416 134.908 141.208C133.66 141.976 132.256 142.36 130.696 142.36ZM130.156 139.3C131.236 139.3 132.184 139.048 133 138.544C133.816 138.04 134.464 137.356 134.944 136.492C135.424 135.604 135.664 134.584 135.664 133.432C135.664 132.304 135.424 131.296 134.944 130.408C134.464 129.52 133.816 128.836 133 128.356C132.184 127.852 131.248 127.6 130.192 127.6C129.112 127.6 128.164 127.852 127.348 128.356C126.532 128.836 125.896 129.52 125.44 130.408C124.984 131.296 124.756 132.316 124.756 133.468C124.756 134.596 124.972 135.604 125.404 136.492C125.86 137.356 126.496 138.04 127.312 138.544C128.152 139.048 129.1 139.3 130.156 139.3ZM121.696 149.164V124.9H124.936V129.4L124.324 133.54L124.936 137.716V149.164H121.696ZM150.569 142.36C148.865 142.36 147.329 141.976 145.961 141.208C144.593 140.416 143.513 139.348 142.721 138.004C141.929 136.66 141.533 135.136 141.533 133.432C141.533 131.752 141.917 130.24 142.685 128.896C143.477 127.552 144.533 126.496 145.853 125.728C147.197 124.936 148.697 124.54 150.353 124.54C151.937 124.54 153.329 124.9 154.529 125.62C155.753 126.34 156.701 127.336 157.373 128.608C158.069 129.88 158.417 131.32 158.417 132.928C158.417 133.168 158.405 133.432 158.381 133.72C158.357 133.984 158.309 134.296 158.237 134.656H143.801V131.956H156.509L155.321 133C155.321 131.848 155.117 130.876 154.709 130.084C154.301 129.268 153.725 128.644 152.981 128.212C152.237 127.756 151.337 127.528 150.281 127.528C149.177 127.528 148.205 127.768 147.365 128.248C146.525 128.728 145.877 129.4 145.421 130.264C144.965 131.128 144.737 132.148 144.737 133.324C144.737 134.524 144.977 135.58 145.457 136.492C145.937 137.38 146.621 138.076 147.509 138.58C148.397 139.06 149.417 139.3 150.569 139.3C151.529 139.3 152.405 139.132 153.197 138.796C154.013 138.46 154.709 137.956 155.285 137.284L157.373 139.408C156.557 140.368 155.549 141.1 154.349 141.604C153.173 142.108 151.913 142.36 150.569 142.36ZM174.046 142V132.028C174.046 130.732 173.638 129.664 172.822 128.824C172.006 127.984 170.95 127.564 169.654 127.564C168.79 127.564 168.022 127.756 167.35 128.14C166.678 128.524 166.15 129.052 165.766 129.724C165.382 130.396 165.19 131.164 165.19 132.028L163.858 131.272C163.858 129.976 164.146 128.824 164.722 127.816C165.298 126.808 166.102 126.016 167.134 125.44C168.166 124.84 169.33 124.54 170.626 124.54C171.922 124.54 173.062 124.864 174.046 125.512C175.054 126.16 175.846 127.012 176.422 128.068C176.998 129.1 177.286 130.204 177.286 131.38V142H174.046ZM161.95 142V124.9H165.19V142H161.95ZM188.909 142.36C187.325 142.36 185.909 141.976 184.661 141.208C183.413 140.416 182.417 139.348 181.673 138.004C180.953 136.66 180.593 135.148 180.593 133.468C180.593 131.788 180.953 130.276 181.673 128.932C182.417 127.588 183.413 126.52 184.661 125.728C185.909 124.936 187.325 124.54 188.909 124.54C190.181 124.54 191.333 124.816 192.365 125.368C193.397 125.896 194.225 126.64 194.849 127.6C195.497 128.536 195.857 129.628 195.929 130.876V136.024C195.857 137.248 195.509 138.34 194.885 139.3C194.261 140.26 193.433 141.016 192.401 141.568C191.369 142.096 190.205 142.36 188.909 142.36ZM189.449 139.3C190.529 139.3 191.465 139.048 192.257 138.544C193.073 138.04 193.709 137.356 194.165 136.492C194.621 135.604 194.849 134.596 194.849 133.468C194.849 132.292 194.609 131.272 194.129 130.408C193.673 129.544 193.037 128.86 192.221 128.356C191.429 127.852 190.493 127.6 189.413 127.6C188.333 127.6 187.385 127.852 186.569 128.356C185.753 128.86 185.105 129.556 184.625 130.444C184.169 131.308 183.941 132.304 183.941 133.432C183.941 134.584 184.169 135.604 184.625 136.492C185.105 137.356 185.753 138.04 186.569 138.544C187.409 139.048 188.369 139.3 189.449 139.3ZM197.909 142H194.633V137.392L195.245 133.216L194.633 129.076V116.296H197.909V142Z" fill="#F8F8FF" />
            </svg>
          </IonCol>
        </IonRow>
        <IonRow>
          <IonCol className="sign-in-form">
            <form action="post" onSubmit={(e) => handleSubmit(e)}>
              
                <IonText className={invalidCredentials ? 'show' : 'hidden'}>Invalid Email Provided</IonText>
              
              <IonInput className="signin-input" placeholder="Email Address" value={email} onIonInput={(e: any) => setEmail(e.target.value)}></IonInput>
              <br />
              
                <IonText className={invalidCredentials ? 'show' : 'hidden'}>Invalid Password Provided</IonText>
              
              <IonInput className="signin-input" type="password" placeholder="Password" value={password} onIonInput={(e: any) => setPassword(e.target.value)}></IonInput>
              <br />
              <IonButton className="sign-in-btn" expand="block" onClick={handleSubmit} >Sign In</IonButton>
              <br />
              <IonButton className="forgot-password" expand="block">Forgot Password?</IonButton>
            </form>
          </IonCol>
        </IonRow>
      </div>
    </>

  );
};

export default SignIn;
